// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                    Int                    @id @default(autoincrement())
  email                 String                 @unique
  password              String
  name                  String?
  phoneNumber           String                 @unique
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  messages              Message[]
  whatsappConversations WhatsappConversation[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  type      String // text, image, document
  fromUser  Boolean // true if from user, false if from system
  timestamp DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  metadata  Json? // For storing additional message data like image URLs, document info, etc.
}

model WhatsappConversation {
  id          Int               @id @default(autoincrement())
  userId      Int
  user        User              @relation(fields: [userId], references: [id])
  personaType String // therapist, dietician, career
  messages    WhatsappMessage[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model WhatsappMessage {
  id             Int                  @id @default(autoincrement())
  content        String
  fromUser       Boolean // true if from user, false if from AI
  timestamp      DateTime             @default(now())
  conversationId Int
  conversation   WhatsappConversation @relation(fields: [conversationId], references: [id])
  metadata       Json? // For storing additional message data
}
